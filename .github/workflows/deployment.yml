name: deploy paymybuddy
on: [ push ]
env:
    IMAGE: paymybuddy
    VERSION: 0.0.1
jobs:
  create-folder:
    name: create-folder
    runs-on: ubuntu-latest
    steps:
      - name: execute commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            mkdir /opt/applications/mvp_projets/${{env.IMAGE}}
            ls -al /opt/applications/mvp_projets


  generate-image:
    name: generate image
    runs-on: ubuntu-latest
    needs: ['create-folder']
    steps:

      - name: Clone sources with checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven


      # New step to add execute permissions to mvnw
      - name: Add execute permissions to mvnw
        run: chmod +x ./mvnw

      - name: Generate and push image
        run: |
          ./mvnw clean package spring-boot:build-image \
          -Ddocker.publishRegistry.username=${{ secrets.DOCKER_HUB_USERNAME }} \
          -Ddocker.publishRegistry.password=${{ secrets.DOCKER_HUB_PASSWORD }} \
          -Dspring-boot.build-image.publish=true \
          -Dmaven.test.skip=true

    run-container:
      name: run-container
      runs-on: ubuntu-latest
      needs: ['generate-image']
      steps:
        - name: Clone sources with checkout
          uses: actions/checkout@v4

        - name: copy file via ssh key
          uses: appleboy/scp-action@v0.1.7
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.PRIVATE_KEY }}
            port: 22
            source: "docker-compose.yml"
            target: /opt/applications/mvp_projets/${{env.IMAGE}}

        - name: execute commands to run container
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.PRIVATE_KEY }}
            port: 22
            script: |
              echo DB_HOST="${{secrets.DB_HOST}}" >> /opt/applications/mvp_projets/${{env.IMAGE}}/.env
              echo DB_USERNAME="${{secrets.DB_USERNAME}}" >> /opt/applications/mvp_projets/${{env.IMAGE}}/.env
              echo DB_PASSWORD="${{secrets.DB_PASSWORD}}" >> /opt/applications/mvp_projets/${{env.IMAGE}}/.env
              docker compose -f /opt/applications/mvp_projets/${{env.IMAGE}}/docker-compose.yml up -d
              mkdir /opt/applications/mvp_projets/${{env.IMAGE}}
              ls -al /opt/applications/mvp_projets

